PROCEDURE      REPORTS.CASES_SUMMARY:T  (157655,50049)  |Last amended Jun 06, 2014,13:54:09
call SYSPROC.TOOLS.HTMLCODE
call GUIPROCF.SYSTEM.ALLRECS

retrieval  CRWARN
<comment> write "making Cases List Displaying each record and key values for that record."
call GUIPROCF.GUI_MAIN.DECLARE_VARIABLES

CASE_NAME = trimlr(keyname(0, 1))
CASE_LABEL = trimlr(varlabsc(0, CASE_NAME))
if(CASE_LABEL eq '') CASE_LABEL = CASE_NAME
if( dbtype(0) eq 0 ) CASE_LABEL =' Tested only with Case Structured DBs'

. DB_SR1_FILE = dsn( 'SIR'+ PFORMAT( SYSTEM( 39 ), 'zz' ) +'1' )
. execute subroutine SYSPROC.TOOLS.FILENAME (DB_SR1_FILE) returning ( PATH_FILE, NAME_FILE, EXT_FILE )

. OUTPUT_FILE = PATH_FILE + 'case_summary.html'

. open ( HTM ) write dsnvar = OUTPUT_FILE lrecl = 600
. execute subprocedure MAKE_HEADER


C CALL WPF.SYSTEM.DEFINE_VARS
C CALL WPF.SYSTEM.INI_VARS

set REC_TOT__4 (0)

write(htm) '<h3>Case Summary ' [datec(today(0), 'Wwwwwwwww MM.DD.YYYY')] '</h3>'
write(htm) '<div> '
write(htm) '<table>'
write(htm) 2t '<tr>'
write(htm) '<th title="Case">' CASE_LABEL  '</th>'
for EACH_RECORD_NUMBER = 1, nrecs(0)
. ifnot (len(recname(EACH_RECORD_NUMBER)) gt 0) next for
. RECORD_NAME = trimlr(recname(EACH_RECORD_NUMBER))
. ifthen (len(trimlr(recdoc(EACH_RECORD_NUMBER, 0))) gt 0)
.   REC_LABEL = trimlr(recdoc(EACH_RECORD_NUMBER, 0))
. elseif (len(trimlr(recdoc(EACH_RECORD_NUMBER, 1))) gt 0)
.   REC_LABEL = trimlr(recdoc(EACH_RECORD_NUMBER, 1))
. else
.   REC_LABEL = trimlr(recname(EACH_RECORD_NUMBER))
. endif
. REC_ROW_COUNT = numrecs(EACH_RECORD_NUMBER)
. GEN_STR1 = ' title="' + REC_LABEL + ' Total Recs: '  + format(REC_ROW_COUNT) +  '"'
. write(htm) '<th' GEN_STR1 '>' RECORD_NAME '</th>'
end for
write(htm) '<th title="Total Records">Total</th>'
write(htm) 2t '</tr>'

process cases
. write(htm) '    <tr>'
. VAR_NAME_CB = stdname(CASE_NAME)
. CASE_VALUE = trim(varget(VAR_NAME_CB))
. GEN_STR1 = '  <td>' + CASE_VALUE + '</td>'
. write(htm) GEN_STR1

REC_TOT__4 = 0
do repeat RECN = <GREC1>
                 <GREC2>
                 <GREC3>
                 <GREC4>
                 <GREC5>

. REC_TYPE_NUM = RECN
. GEN_STR1 = pack(recname(REC_TYPE_NUM))

. write(htm) '<td title="' CASE_VALUE ':' GEN_STR1 '">'
. SOME_TOGGLE = 0
. REC_ROW_COUNT = 0
. process rec RECN
.   SOME_TOGGLE = 1
.   REC_TOT__4 = REC_TOT__4  + 1
.   REC_ROW_COUNT = REC_ROW_COUNT  + 1
.   for EACH_KEY = 1 + dbtype(0), nkeys( REC_TYPE_NUM ) +  dbtype( 0 )
.     if( amod( REC_ROW_COUNT, 2 ) eq 0 )  write(htm)'<span class="bluekeys">'
.     KEY_NAME = pack( keyname( REC_TYPE_NUM, EACH_KEY ) )
.     VAR_NAME_CB  = stdname( KEY_NAME )
.     STRING_VARGET = pack( varget( VAR_NAME_CB ) )
.     ifthen ( vtype( REC_TYPE_NUM, VAR_NAME_CB ) eq 3 )
.       VAR_FORMAT = datemap( REC_TYPE_NUM, VAR_NAME_CB )
.       STRING_VARGET = datec( cdate( STRING_VARGET, VAR_FORMAT ), VAR_FORMAT )
.       STRING_VARGET = replace( STRING_VARGET, " ", "/", 2, 1, 0 )
.     elseif ( vtype( REC_TYPE_NUM, KEY_NAME ) eq 4 )
        VAR_FORMAT = timemap( REC_TYPE_NUM, KEY_NAME )
.       STRING_VARGET = timec( ctime( STRING_VARGET, VAR_FORMAT ), VAR_FORMAT )
.     endif
.     write(htm) STRING_VARGET
.     if( mod( REC_ROW_COUNT, 2 ) eq 0 )  write(htm)'</span>'
.   end for
.   ifnot ( count( REC_TYPE_NUM ) eq REC_ROW_COUNT ) write(htm) ','
. end rec
. ifthen ( nkeys( REC_TYPE_NUM ) eq 0 )
.   ifthen ( SOME_TOGGLE eq 1 )
.     write(htm) 'Y'
.   else
.     write(htm) 'N'
.   endif
. else
.   if ( SOME_TOGGLE eq 0 ) write(htm) '0'
. endif
. write(htm) '</td>'
end repeat

write(htm) '<td style="font-right">' REC_TOT__4 '</td>'
write(htm) '</tr>'
end cases

write(htm) '</table></div>'
write(htm) '</form>'
write(htm) '</body>'
write(htm) '</html>'
write 'Finished: Case Summary is at: ' [DSN('HTM')]

. subprocedure MAKE_HEADER
.   write ( HTM )  '<!DOCTYPE HTML>'
.   write ( HTM )  '<html>'
.   write ( HTM )  '<head>'
.   write ( HTM )  '<meta http-equiv="Content-Type" content="text/html;charset=utf-8">'
.   write ( HTM )  '<title>' [dbname(0)] ' ' CASE_NAME ' Summary</title>'
.   write ( HTM )  '<STYLE type="text/css">'
.   write ( HTM )  'BODY {'
.   write ( HTM )  ' font-family: Arial, sans-serif;'
.   write ( HTM )  ' color: black;'
.   write ( HTM )  '}'
.   write ( HTM )  'h1 {'
.   write ( HTM )  ' text-align: center;'
.   write ( HTM )  ' padding: 10px 0px 10px 0px;'
.   write ( HTM )  ' margin: 0px;'
.   write ( HTM )  '}'
.   write ( HTM )  'h2 {'
.   write ( HTM )  ' text-align: center;'
.   write ( HTM )  ' padding: 10px;'
.   write ( HTM )  ' margin: 0px;'
.   write ( HTM )  '}'
.   write ( HTM )  'h4 {text-align: center;}'
.   write ( HTM )  'h5 {'
.   write ( HTM )  ' background-color: orange;'
.   write ( HTM )  ' border: 1px solid black;'
.   write ( HTM )  ' padding: 10px;'
.   write ( HTM )  ' margin: 0px 0px 30px 0px;'
.   write ( HTM )  ' text-align: right;'
.   write ( HTM )  '}'
.   write ( HTM )  'p {'
.   write ( HTM )  ' margin-top: .5em;'
.   write ( HTM )  ' margin-bottom: .5em;'
.   write ( HTM )  '}'
.   write ( HTM )  'a {text-decoration:none; color:black}'
.   write ( HTM )  'table {border: 5px solid #555;'
.   write ( HTM )  ' border-radius: 5px;'
.   write ( HTM )  ' border-collapse: collapse;'
.   write ( HTM )  ' width: 100%;'
.   write ( HTM )  ' padding: 15px;'
.   write ( HTM )  ' margin-bottom: 20px;'
.   write ( HTM )  '}'
.   write ( HTM )  'th  {'
.   write ( HTM )  ' background-color:' HTML_BLUE1 ';'
.   write ( HTM )  ' font-weight:bold;'
.   write ( HTM )  ' padding:15px;'
.   write ( HTM )  '}'
.   write ( HTM )  'th:hover  {'
.   write ( HTM )  ' background-color:' HTML_BLUE2 ';'
.   write ( HTM )  '}'
.   write ( HTM )  'tr:nth-child(even) {background-color: #EEEEEE;}'
.   write ( HTM )  'tr:hover, tr:nth-child(even):hover{'
.   write ( HTM )  ' background-color: #DDDDDD;'
.   write ( HTM )  '}'
.   write ( HTM )  'td {'
.   write ( HTM )  '  border: 0px; padding:5px 15px 5px 15px;'
.   write ( HTM )  '  border-left: 1px solid #CECECE;'
.   write ( HTM )  '  padding:5px 15px 5px 15px;'
.   write ( HTM )  '  text-align:right;'
.   write ( HTM )  '}'
.   write ( HTM )  'td:hover {background-color:#FFFFFF;}'
.   write ( HTM )  'ul {padding-left: 75px; margin-top:0px; margin-bottom:0px;}'
.   write ( HTM )  'li {list-style-type: none; display: inline-block;margin-right:15px;margin-bottom:10px;}'
.   write ( HTM )  '.bluekeys'
.   write ( HTM )  '  {color:' HTML_BLUE4 ';}'
.   write ( HTM )  '}'
.   write ( HTM )  '</style>'
.   write ( HTM )  '</head>'
. end subprocedure
end retrieval
END PROCEDURE
